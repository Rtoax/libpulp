# ULP tools location.
ULP_DYNSYM_GATE = $(top_builddir)/tools/dynsym_gate/ulp_dynsym_gate
ULP_PACKER = $(top_builddir)/tools/packer/ulp_packer
ULP_REVERSE = $(top_builddir)/tools/packer/ulp_reverse

# Build and link requirements for live-patchable (target) libraries.
ULP_NOP_LENGTH = @ULP_NOP_LENGTH@
TARGET_CFLAGS = -fPIC \
                -fpatchable-function-entry=$(ULP_NOP_LENGTH) \
                $(AM_CFLAGS)
TARGET_LDFLAGS = --build-id
TARGET_TRM_SOURCES = $(top_srcdir)/lib/trm.S

# In libtool, convenience libraries are not installed, so they do not
# need -rpath, which causes them to be statically linked.  However,
# libpulp can only live patch dynamically linked libraries, so pass
# -rpath to libtool, which causes the linking to become dynamic.
CONVENIENCE_LDFLAGS = -rpath $(libdir)

# The following custom rules are triggered by <testname>_DEPENDENCIES:

# This rule causes the target library to be post-processed with
# ulp_dynsym_gate, so that its .ulp section gets filled.  Files with
# .post extension track whether the respective libraries have already
# been post-processed.
.libs/lib%.post: lib%.la
	$(ULP_DYNSYM_GATE) .libs/lib$*.so
	touch $@

# These rules cause the livepatch metadata to be built.  The .ulp target
# depends on check_LTLIBRARIES, because .la targets indirectly produce
# the .so files they need (it is impossible to have .ulp targets depend
# directly on .so files, because libtool does not create .so targets).
%.dsc: %.in
	sed -e "s|__ABS_BUILDDIR__|$(abs_builddir)|" $^ > $@

%.ulp: %.dsc $(check_LTLIBRARIES)
	$(ULP_PACKER) $< $@

%.rev: %.ulp
	$(ULP_REVERSE) $< $@
